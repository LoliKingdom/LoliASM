buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = "5.6"
group = "zone.rong.loliasm"
archivesBaseName = "loliasm"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
	version = "1.12.2-14.23.5.2847"
    runDir = "run"
    mappings = "stable_39"
    def args = [
            '-Dfml.coreMods.load=zone.rong.loliasm.core.LoliLoadingPlugin',
            '-Dmixin.hotSwap=true',
            '-Dmixin.checks.interfaces=true',
			'-Dmixin.debug.export=true'
    ]
    clientJvmArgs.addAll(args)
    serverJvmArgs.addAll(args)
    useDepAts = true
    makeObfSourceJar = false
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    jcenter()
    maven {
        url "https://maven.cleanroommc.com"
    }
    maven {
        url "http://chickenbones.net/maven"
    }
    maven {
        url "http://maven.covers1624.net"
    }
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url "https://modmaven.k-4u.nl/"
    }
    maven {
        url "https://maven.blamejared.com"
    }
    maven {
        url "https://maven.thiakil.com"
    }
    maven {
        url "https://repo.codemc.io/repository/maven-public/"
    }
    maven {
        url "http://maven.tterrag.com"
    }
    // maven {
        // url = "http://maven.bluexin.be/repository/snapshots/"
    // }
}

dependencies {
    embed "me.nallar.whocalled:WhoCalled:1.1"
    deobfProvided "com.enderio.core:EnderCore:1.12.2-+"
    deobfProvided ("com.enderio:EnderIO:1.12.2-+") {
        transitive = false
    }
    compile "codechicken:ChickenASM:1.12-1.0.2.9"
    provided "epicsquid.mysticallib:mysticallib:1.12.2-+"
    compile "mezz.jei:jei_1.12.2:4.15.0.293"
    compile "zone.rong:mixinbooter:7.1"
    // compile files("./etc/spark-forge-deobf.jar", "./etc/preview_OptiFine_1.12.2_HD_U_G6_pre1-deobf.jar")
    compile files("./etc/spark-forge-deobf.jar")

    deobfCompile 'slimeknights.mantle:Mantle:1.12-1.3.3.55+'
    deobfCompile 'slimeknights:TConstruct:1.12.2-2.13.0.183+'

    deobfProvided "betterwithmods:BetterWithMods:1.12-2.3.20-1030"

    deobfCompile "codechicken:CodeChickenLib:1.12.2-3.2.3.358:universal"
    deobfProvided "com.azanor.baubles:Baubles:1.12-1.5.2"
    deobfProvided "blusunrize:ImmersiveEngineering:0.12-92-+"
    deobfProvided "curse.maven:astral-sorcery-241721:3044416"
    deobfProvided "curse.maven:tfcraft-302973:3268988"
    deobfProvided "curse.maven:foamfix-optimization-mod-278494:3327893"
    deobfProvided "curse.maven:electroblobs-wizardry-265642:3189062"
    // deobfCompile "curse.maven:qmd-362056:3474533"
    // deobfCompile "cofh:CoFHCore:1.12.2-+:universal"
    // compile "com.teamwizardry.librarianlib:librarianlib-1.12:4.0-SNAPSHOT:deobf"
    deobfProvided "curse.maven:extra-utilities-225561:2678374"
    deobfProvided "curse.maven:gottschcore-272450:3748293"
    deobfProvided "curse.maven:treasure2-289760:3758107"
    deobfProvided "curse.maven:time-speed-mod-221053:2991593"
    deobfCompile "curse.maven:gregtech-ce-unofficial-557242:3745499"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceSets {
    main {
        ext.refMap = "mixins.loliasm.refmap.json"
    }
}

jar {
    from (configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'LICENSE.txt', 'META-INF/MANIFSET.MF', 'META-INF/maven/**', 'META-INF/*.RSA', 'META-INF/*.SF'
    }
    manifest {
        attributes([
                "FMLCorePluginContainsFMLMod": true,
                "FMLCorePlugin": 'zone.rong.loliasm.core.LoliLoadingPlugin',
                "ForceLoadAsMod": project.gradle.startParameter.taskNames[0] == "build",
                "TweakClass": 'org.spongepowered.asm.launch.MixinTweaker',
                "FMLAT": "loliasm_at.cfg"
        ])
    }
}
